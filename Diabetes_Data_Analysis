# Importing necessary libraries
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.datasets import load_diabetes

# Loading the diabetes dataset
diabetes = load_diabetes()
df = pd.DataFrame(data=diabetes.data, columns=diabetes.feature_names)
df['target'] = diabetes.target

# Data Cleaning and Preprocessing
# 1. Checking for missing values
missing_values = df.isnull().sum()
print("Missing Values in Each Column:")
print(missing_values)

# 2. Summary statistics
summary_stats = df.describe()
print("\nSummary Statistics:")
print(summary_stats)

# Exploratory Data Analysis (EDA)
# 1. Checking the distribution of the target variable (disease progression)
target_distribution = df['target'].describe()
print("\nTarget Variable Distribution:")
print(target_distribution)

# 2. Visualizing the correlation matrix using a heatmap
plt.figure(figsize=(10, 8))
correlation_matrix = df.corr()
sns.heatmap(correlation_matrix, annot=True, fmt='.2f', cmap='coolwarm')
plt.title('Correlation Matrix of Diabetes Dataset')
plt.show()

# Data Visualization
# 1. Scatter plot for BMI vs. Disease Progression
plt.figure(figsize=(8, 5))
sns.scatterplot(data=df, x='bmi', y='target')
plt.title('BMI vs Disease Progression')
plt.xlabel('Body Mass Index (BMI)')
plt.ylabel('Disease Progression Indicator')
plt.show()

# Simple Predictive Modeling
# 1. Predicting Disease Progression using BMI
X = df[['bmi']]  # Predictor
y = df['target']  # Target

# Splitting the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# 2. Applying Linear Regression
model = LinearRegression()
model.fit(X_train, y_train)

# Making predictions on the test set
y_pred = model.predict(X_test)

# 3. Model Evaluation
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("\nModel Evaluation:")
print(f"Mean Squared Error (MSE): {mse}")
print(f"RÂ² Score: {r2}")
